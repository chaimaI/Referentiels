@model Referentiels.Models.ItemListViewModel

@{
    ViewBag.Title = "Ajouter une élément à une liste";

}



<div class="header-portail">Ajouter un éleve à la classe</div>



@using (Html.BeginForm())
{

    @Html.AntiForgeryToken()
    @*<div id="messagesActions">
            @Html.LabelFor(c => c, Model.MessageError, new { @class = "alert alert-danger" })
        </div>*@
    <div class="form-horizontal">
        <div class="col-xs-12">
            <h4>
                <span>Ajouter un élément à @Model.ClasseListe.NomClasses</span>
                @Html.HiddenFor(c => c.ClasseListe)
                @Html.HiddenFor(c => c.ClasseListe.NomClasses)
                @Html.HiddenFor(c => c.IdClasses)
            </h4>

            <div class="form-group">
                @Html.LabelFor(c => c.Date)
                @Html.TextBoxFor(c => c.Date, new { @type = "date", @class = "form-control datepicker" })
                @Html.ValidationMessageFor(c => c.Date, "", new { @class = "text-danger" })

            </div>


            <div class="form-group">
                @Html.LabelFor(c => c.Horaires)
                @Html.DropDownListFor(c => c.Horaires, new SelectList(Model.AbsencesByClasses, "Value", "Text", Model.Horaires), new { id = "Horaires", @class = "form-control-textbox form-control", @maxlength = "50" })
                @Html.ValidationMessageFor(c => c.Horaires, string.Empty, new { @class = " text-danger " })
            </div>


            <div class="form-group">
                @Html.LabelFor(c => c.Nom)
                @Html.TextBoxFor(c => c.Nom, Model.Nom, new { id = "Nom", @class = "form-control-textbox form-control" })
                @Html.ValidationMessageFor(c => c.Nom, string.Empty, new { @class = " text-danger " })
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.Prenom)
                @Html.TextBoxFor(c => c.Prenom, Model.Prenom, new { id = "Prenom", @class = "form-control-textbox form-control" })
                @Html.ValidationMessageFor(c => c.Prenom, string.Empty, new { @class = " text-danger " })
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.Presences)
                @Html.TextBoxFor(c => c.Presences, Model.Presences = "Absent", new { id = "Prsences", @class = "form-control-textbox form-control" })
                @Html.ValidationMessageFor(c => c.Presences, string.Empty, new { @class = " text-danger " })
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.Commentaires)
                @Html.TextBoxFor(c => c.Commentaires, Model.Commentaires, new { id = "Commentaires", @class = "form-control-textbox form-control" })
                @Html.ValidationMessageFor(c => c.Commentaires, string.Empty, new { @class = " text-danger " })
            </div>
            <div class="form-group">
                <a href="@Url.Action("ItemList", "Referential", new { Id = Model.IdClasses })" class="btn btn-default">Revenir à la liste</a>
                <input type="submit" value="Créer l'élément de liste" class="btn btn-success" />
            </div>
        </div>
    </div>
}

@section scripts
{
    <script>
        $(document).ready(function () {
            $(document).on('click', 'a', function () {
                $("#loaderModalShared").css('display', 'block');
                $("#loaderModalShared").css('position', 'absolute');
                $("#loaderModalShared").css('zIndex', 9999);
            });

            $("form").submit(function (e) {
                if ($("form").valid()) {
                    $("#loaderModalShared").css('display', 'block');
                    $("#loaderModalShared").css('position', 'absolute');
                    $("#loaderModalShared").css('zIndex', 9999);
                }
            });
        });
    </script>
}
